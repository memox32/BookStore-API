@page "/books/delete"

@attribute [Authorize(Roles = "Administrator")]
@inject IBookRepository _repo
@inject IFileUpload _fileUpload
@inject NavigationManager _navManager

<h3 class="card-title">Are you sure you want to delete this record?</h3>

<br />
<hr />
<br />

@if (!isSuccess)
{
  <ErrorMessage Message="Something went wrong with the delete attemp" />
}

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
  <ErrorMessage Message="Invalid selection. Please try again" />
}

else if (Model == null)
{
  <LoadingMessage Message="Loading Book Details" />
}
else
{
  @if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
  {
    <ErrorMessage Message="Invalid selection. Please try again" />
  }
  else if (Model == null)
  {
    <LoadingMessage Message="Loading Book Details" />
  }
  else
  {
    <div class="row">
      <div class="col-6">
        <table class="table table-responsive">
          <tr>
            <td>
              <strong>Title</strong>
            </td>
            <td>@Model.Title</td>
          </tr>
          <tr>
            <td>
              <strong>Author</strong>
            </td>
            <td>
              @if (Model.Author == null)
              {
                <span class="text-muted">No author recorded</span>
              }
              else
              {
                <a href="/authors/view/@Model.AuthorId">@Model.Author.FirstName @Model.Author.LastName</a>
              }
            </td>
          </tr>
          <tr>
            <td>
              <strong>Summary</strong>
            </td>
            <td>@Model.Summary</td>
          </tr>
          <tr>
            <td>
              <strong>Published Year</strong>
            </td>
            <td>@Model.Year</td>
          </tr>
          <tr>
            <td>
              <strong>ISBN</strong>
            </td>
            <td>@Model.ISBN</td>
          </tr>
        </table>
      </div>
      <div class="col-4">
        <img src="uploads/@Model.Image" style="height:300px; width:300px;" />
        <h3 class="text-center text-info">@Model.Price</h3>
      </div>
    </div>
  }
}

<button @onclick="DeleteBook" class="btn btn-danger">
  <span class="oi oi-delete"></span>
  Delete Author
</button>
<button @onclick="BackToList" class="btn btn-outline-secondary">
  <span class="oi oi-media-skip-backward"></span>
  Back To List
</button>

@code {
  [Parameter]
  public string Id { get; set; }

  private Book Model = new Book();
  private bool isSuccess = true;

  protected async override Task OnInitializedAsync()
  {
    int id = Convert.ToInt32(Id);
    Model = await _repo.Get(Endpoints.BooksEndpoint, id);
  }

  private async Task DeleteBook()
  {
    _fileUpload.RemoveFile(Model.Image);
    isSuccess = await _repo.Delete(Endpoints.BooksEndpoint, Model.Id);

    if (isSuccess)
    {
      BackToList();
    }
    else
    {
      isSuccess = true;
    }
  }

  private void BackToList()
  {
    _navManager.NavigateTo("/books/");
  }
}
