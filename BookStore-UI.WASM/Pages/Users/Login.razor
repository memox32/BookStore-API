@page "/login"

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navManager

<h3 class="card-title">Login</h3>
@if (!response)
{
  <ErrorMessage Message="Something went wrong with the login attemp" />
}
<div class="card-body">
  <EditForm Model="Model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
      <label for="email">Email address</label>
      <InputText class="form-control" id="email" @bind-Value="Model.EmailAddress" />
      <ValidationMessage For="@(() => Model.EmailAddress)" />
    </div>
    <div class="form-group">
      <label for="password">Password</label>
      <InputText class="form-control" type="password" id="password" @bind-Value="Model.Password" />
      <ValidationMessage For="@(() => Model.Password)" />
    </div>
    <button type="submit" class="btn btn-primary btn-block">Login</button>
  </EditForm>
</div>

@code {

  private LoginModel Model = new LoginModel();
  bool response = true; //this will be private

  private async Task HandleLogin()
  {

    response = await _authRepo.Login(Model);

    if (response)
    {
      //injection
      _navManager.NavigateTo("/");
    }
  }
}
